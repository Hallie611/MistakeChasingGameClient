/// <reference path="../js/jquery-1.9.1.min.js" />
/// <reference path="../js/knockout-2.2.1.js" />
/// <reference path="../js/dx.all.js" />

(function () {

    // Data for find bug questions
    var findbugs = [
        { id: 1, src: "images/findbugQ/P1.jpg", dif: 1, width: "12%", height: "6%", top: "7%", left: "65%" },
        { id: 2, src: "images/findbugQ/P2.jpg", dif: 1, width: "7%", height: "6%", top: "8%", left: "11%" },
        { id: 3, src: "images/findbugQ/P3.jpg", dif: 1, width: "5%", height: "6%", top: "6%", left: "50%" },
        { id: 4, src: "images/findbugQ/P4.jpg", dif: 1, width: "5%", height: "6%", top: "0%", left: "28%" },
        { id: 5, src: "images/findbugQ/P5.jpg", dif: 1, width: "7%", height: "6%", top: "8%", left: "16%" },
        { id: 6, src: "images/findbugQ/P6.jpg", dif: 2, width: "12%", height: "5%", top: "4%", left: "29%" },
        { id: 7, src: "images/findbugQ/P7.jpg", dif: 2, width: "13%", height: "6%", top: "7%", left: "80%" },
        { id: 8, src: "images/findbugQ/P8.jpg", dif: 2, width: "5%", height: "6%", top: "14%", left: "75%" },
        { id: 9, src: "images/findbugQ/P9.jpg", dif: 2, width: "17%", height: "6%", top: "19%", left: "18%" },
        { id: 10, src: "images/findbugQ/P10.jpg", dif: 2, width: "16%", height: "6%", top: "8%", left: "29%" },
		{ id: 11, src: "images/findbugQ/P11.jpg", dif: 3, width: "16%", height: "6%", top: "26%", left: "25%" },
		{ id: 12, src: "images/findbugQ/P12.jpg", dif: 3, width: "5%", height: "6%", top: "21%", left: "18%" },
		{ id: 13, src: "images/findbugQ/P13.jpg", dif: 3, width: "8%", height: "6%", top: "7%", left: "26%" },
		{ id: 14, src: "images/findbugQ/P14.jpg", dif: 3, width: "13%", height: "6%", top: "15%", left: "34%" },
		{ id: 15, src: "images/findbugQ/P15.jpg", dif: 3, width: "11%", height: "6%", top: "25%", left: "64%" },
		{ id: 16, src: "images/findbugQ/P16.jpg", dif: 4, width: "7%", height: "6%", top: "8%", left: "12%" },
		{ id: 17, src: "images/findbugQ/P17.jpg", dif: 4, width: "5%", height: "6%", top: "3%", left: "25%" },
		{ id: 18, src: "images/findbugQ/P18.jpg", dif: 4, width: "7%", height: "5%", top: "7%", left: "19%" },
		{ id: 19, src: "images/findbugQ/P19.jpg", dif: 4, width: "5%", height: "6%", top: "22%", left: "46%" },
		{ id: 20, src: "images/findbugQ/P20.jpg", dif: 4, width: "23%", height: "6%", top: "14%", left: "16%" },
		{ id: 21, src: "images/findbugQ/P21.jpg", dif: 5, width: "21%", height: "5%", top: "0%", left: "78%" },
		{ id: 22, src: "images/findbugQ/P22.jpg", dif: 5, width: "14%", height: "6%", top: "13%", left: "32%" },
		{ id: 23, src: "images/findbugQ/P23.jpg", dif: 5, width: "13%", height: "4%", top: "8%", left: "24%" },
		{ id: 24, src: "images/findbugQ/P24.jpg", dif: 5, width: "36%", height: "5%", top: "11%", left: "9%" },
		{ id: 25, src: "images/findbugQ/P25.jpg", dif: 6, width: "11%", height: "6%", top: "11%", left: "26%" },
		{ id: 26, src: "images/findbugQ/P26.jpg", dif: 6, width: "11%", height: "5%", top: "13%", left: "7%" },
		{ id: 27, src: "images/findbugQ/P27.jpg", dif: 6, width: "19%", height: "5%", top: "0%", left: "55%" },
		{ id: 28, src: "images/findbugQ/P28.jpg", dif: 6, width: "16%", height: "6%", top: "22%", left: "16%" },
		{ id: 29, src: "images/findbugQ/P29.jpg", dif: 7, width: "14%", height: "6%", top: "11%", left: "9%" },
		{ id: 30, src: "images/findbugQ/P30.jpg", dif: 7, width: "13%", height: "5%", top: "22%", left: "14%" },
		{ id: 31, src: "images/findbugQ/P31.jpg", dif: 7, width: "12%", height: "5%", top: "31%", left: "21%" },
        { id: 32, src: "images/findbugQ/P32.jpg", dif: 7, width: "15%", height: "5%", top: "14%", left: "24%" },
        { id: 33, src: "images/findbugQ/P33.jpg", dif: 8, width: "29%", height: "5%", top: "0%", left: "33%" },
        { id: 34, src: "images/findbugQ/P34.jpg", dif: 8, width: "25%", height: "8%", top: "55%", left: "35%" },
        { id: 35, src: "images/findbugQ/P35.jpg", dif: 8, width: "13%", height: "4%", top: "21%", left: "13%" },
        { id: 36, src: "images/findbugQ/P36.jpg", dif: 8, width: "6%", height: "5%", top: "28%", left: "24%" },
        { id: 37, src: "images/findbugQ/P37.jpg", dif: 9, width: "5%", height: "6%", top: "11%", left: "24%" },
        { id: 38, src: "images/findbugQ/P38.jpg", dif: 9, width: "6%", height: "6%", top: "51%", left: "59%" },
        { id: 39, src: "images/findbugQ/P39.jpg", dif: 9, width: "5%", height: "5%", top: "33%", left: "35%" },
        { id: 40, src: "images/findbugQ/P40.jpg", dif: 9, width: "7%", height: "6%", top: "30%", left: "40%" },
		{ id: 41, src: "images/findbugQ/P41.jpg", dif: 10, width: "14%", height: "5%", top: "10%", left: "17%" },
		{ id: 42, src: "images/findbugQ/P42.jpg", dif: 10, width: "13%", height: "5%", top: "7%", left: "23%" },
		{ id: 43, src: "images/findbugQ/P43.jpg", dif: 10, width: "10%", height: "5%", top: "18%", left: "34%" },
		{ id: 44, src: "images/findbugQ/P44.jpg", dif: 10, width: "11%", height: "5%", top: "18%", left: "34%" },
		{ id: 45, src: "images/findbugQ/P45.jpg", dif: 11, width: "19%", height: "5%", top: "21%", left: "35%" },
		{ id: 46, src: "images/findbugQ/P46.jpg", dif: 11, width: "11%", height: "6%", top: "6%", left: "7%" },
		{ id: 47, src: "images/findbugQ/P47.jpg", dif: 11, width: "5%", height: "5%", top: "4%", left: "26%" },
		{ id: 48, src: "images/findbugQ/P48.jpg", dif: 11, width: "6%", height: "5%", top: "21%", left: "32%" },
		{ id: 49, src: "images/findbugQ/P49.jpg", dif: 12, width: "15%", height: "5%", top: "19%", left: "13%" },
		{ id: 50, src: "images/findbugQ/P50.jpg", dif: 12, width: "7%", height: "5%", top: "9%", left: "19%" },
		{ id: 51, src: "images/findbugQ/P51.jpg", dif: 12, width: "19%", height: "4%", top: "0%", left: "53%" },
		{ id: 52, src: "images/findbugQ/P52.jpg", dif: 12, width: "10%", height: "6%", top: "10%", left: "18%" },
		{ id: 53, src: "images/findbugQ/P53.jpg", dif: 13, width: "13%", height: "5%", top: "3%", left: "9%" },
		{ id: 54, src: "images/findbugQ/P54.jpg", dif: 13, width: "10%", height: "6%", top: "32%", left: "27%" },
		{ id: 55, src: "images/findbugQ/P55.jpg", dif: 13, width: "9%", height: "5%", top: "29%", left: "26%" },
		{ id: 56, src: "images/findbugQ/P56.jpg", dif: 13, width: "6%", height: "5%", top: "14%", left: "56%" },
		{ id: 57, src: "images/findbugQ/P57.jpg", dif: 14, width: "11%", height: "5%", top: "30%", left: "70%" },
		{ id: 58, src: "images/findbugQ/P58.jpg", dif: 14, width: "8%", height: "5%", top: "16%", left: "27%" },
		{ id: 59, src: "images/findbugQ/P59.jpg", dif: 14, width: "10%", height: "4%", top: "43%", left: "38%" },
		{ id: 60, src: "images/findbugQ/P60.jpg", dif: 14, width: "23%", height: "5%", top: "41%", left: "17%" },
		{ id: 61, src: "images/findbugQ/P61.jpg", dif: 15, width: "7%", height: "5%", top: "17%", left: "49%" },
        { id: 62, src: "images/findbugQ/P62.jpg", dif: 15, width: "6%", height: "6%", top: "33%", left: "81%" },
        { id: 63, src: "images/findbugQ/P63.jpg", dif: 15, width: "5%", height: "5%", top: "30%", left: "40%" },
        { id: 64, src: "images/findbugQ/P64.jpg", dif: 15, width: "7%", height: "5%", top: "8%", left: "69%" },
        { id: 65, src: "images/findbugQ/P65.jpg", dif: 16, width: "12%", height: "5%", top: "32%", left: "14%" },
        { id: 66, src: "images/findbugQ/P66.jpg", dif: 16, width: "6%", height: "5%", top: "56%", left: "38%" },
        { id: 67, src: "images/findbugQ/P67.jpg", dif: 16, width: "8%", height: "6%", top: "22%", left: "32%" },
        { id: 68, src: "images/findbugQ/P68.jpg", dif: 16, width: "5%", height: "5%", top: "43%", left: "47%" },
        { id: 69, src: "images/findbugQ/P69.jpg", dif: 17, width: "10%", height: "6%", top: "44%", left: "40%" },
        { id: 70, src: "images/findbugQ/P70.jpg", dif: 17, width: "5%", height: "6%", top: "30%", left: "36%" },
		{ id: 71, src: "images/findbugQ/P71.jpg", dif: 17, width: "7%", height: "5%", top: "38%", left: "37%" },
		{ id: 72, src: "images/findbugQ/P72.jpg", dif: 17, width: "10%", height: "5%", top: "21%", left: "38%" },
		{ id: 73, src: "images/findbugQ/P73.jpg", dif: 17, width: "27%", height: "5%", top: "26%", left: "15%" },
		{ id: 74, src: "images/findbugQ/P74.jpg", dif: 18, width: "5%", height: "5%", top: "22%", left: "26%" },
		{ id: 75, src: "images/findbugQ/P75.jpg", dif: 18, width: "6%", height: "5%", top: "32%", left: "52%" },
		{ id: 76, src: "images/findbugQ/P76.jpg", dif: 18, width: "6%", height: "5%", top: "27%", left: "48%" },
		{ id: 77, src: "images/findbugQ/P77.jpg", dif: 18, width: "13%", height: "6%", top: "51%", left: "36%" },
		{ id: 78, src: "images/findbugQ/P78.jpg", dif: 18, width: "8%", height: "5%", top: "30%", left: "66%" },
		{ id: 79, src: "images/findbugQ/P79.jpg", dif: 18, width: "5%", height: "5%", top: "59%", left: "40%" },
		{ id: 80, src: "images/findbugQ/P80.jpg", dif: 19, width: "5%", height: "5%", top: "28%", left: "35%" },
		{ id: 81, src: "images/findbugQ/P81.jpg", dif: 19, width: "5%", height: "5%", top: "36%", left: "47%" },
		{ id: 82, src: "images/findbugQ/P82.jpg", dif: 19, width: "11%", height: "5%", top: "51%", left: "65%" },
		{ id: 83, src: "images/findbugQ/P83.jpg", dif: 19, width: "6%", height: "5%", top: "39%", left: "50%" },
		{ id: 84, src: "images/findbugQ/P84.jpg", dif: 19, width: "5%", height: "4%", top: "41%", left: "39%" },
		{ id: 85, src: "images/findbugQ/P85.jpg", dif: 19, width: "24%", height: "5%", top: "24%", left: "30%" },
		{ id: 86, src: "images/findbugQ/P86.jpg", dif: 19, width: "15%", height: "5%", top: "10%", left: "59%" },
		{ id: 87, src: "images/findbugQ/P87.jpg", dif: 20, width: "7%", height: "5%", top: "22%", left: "79%" },
		{ id: 88, src: "images/findbugQ/P88.jpg", dif: 20, width: "6%", height: "5%", top: "67%", left: "24%" },
		{ id: 89, src: "images/findbugQ/P89.jpg", dif: 20, width: "5%", height: "5%", top: "6%", left: "37%" },
		{ id: 90, src: "images/findbugQ/P90.jpg", dif: 20, width: "5%", height: "5%", top: "29%", left: "33%" },
		{ id: 91, src: "images/findbugQ/P91.jpg", dif: 20, width: "6%", height: "5%", top: "43%", left: "24%" },
		{ id: 92, src: "images/findbugQ/P92.jpg", dif: 20, width: "22%", height: "5%", top: "15%", left: "43%" },
		{ id: 93, src: "images/findbugQ/P93.jpg", dif: 21, width: "23%", height: "5%", top: "38%", left: "35%" },
		{ id: 94, src: "images/findbugQ/P94.jpg", dif: 21, width: "6%", height: "5%", top: "27%", left: "40%" },
		{ id: 95, src: "images/findbugQ/P95.jpg", dif: 21, width: "14%", height: "5%", top: "29%", left: "28%" },
		{ id: 96, src: "images/findbugQ/P96.jpg", dif: 21, width: "15%", height: "5%", top: "22%", left: "55%" },
		{ id: 97, src: "images/findbugQ/P97.jpg", dif: 21, width: "6%", height: "5%", top: "31%", left: "40%" },
		{ id: 98, src: "images/findbugQ/P98.jpg", dif: 17, width: "15%", height: "5%", top: "61%", left: "54%" },
		{ id: 99, src: "images/findbugQ/P99.jpg", dif: 18, width: "6%", height: "6%", top: "33%", left: "59%" },
		{ id: 100, src: "images/findbugQ/P100.jpg", dif: 19, width: "5%", height: "5%", top: "31%", left: "47%" },
    ];

    // Data for filling blank questions
    var fillingblank = [
        { id: 1, src: "images/fillinBlankQ/F1.jpg", dif: 1, listA: ["mark >= 49", "mark <= 49", "mark >= 50"], listB: ["pass", "fail", "A&B are true"], listC: ["pass", "fail", "A&B are true"], A: "mark >= 50", B: "pass", C: "fail" },
        { id: 2, src: "images/fillinBlankQ/F2.jpg", dif: 1, listA: ["number/2 != 0", "number/2 == 0", "number/3 == 0"], listB: ["Odd", "Even", "A&B are true"], listC: ["Odd", "Even", "A&B are true"], A: "number/2 == 0", B: "Even", C: "Odd" },
        { id: 3, src: "images/fillinBlankQ/F3.jpg", dif: 1, listA: ["void", "class", "static"], listB: ["void", "class", "abstract"], listC: ["writeln", "println", "write"], A: "class", B: "void", C: "println" },
        { id: 4, src: "images/fillinBlankQ/F4.jpg", dif: 1, listA: ["i = 4", "i = 5", "i = j"], listB: ["j = 4", "j = 0", "j = i"], listC: ["\"*\"", "\"**\"", "\"***\""], A: "i = 5", B: "j = i", C: "\"*\"" },
        { id: 5, src: "images/fillinBlankQ/F5.jpg", dif: 2, listA: ["!", "null", "A&B are false"], listB: ["||", "@@", "<="], listC: ["true", "false", "vacation"], A: "!", B: "||", C: "false" },
        { id: 6, src: "images/fillinBlankQ/F6.jpg", dif: 2, listA: ["||", "&&", "<="], listB: ["||", "<=", "&&"], listC: ["true", "false", "bSmile"], A: "&&", B: "&&", C: "false" },
        { id: 7, src: "images/fillinBlankQ/F7.jpg", dif: 2, listA: ["*", "+", "-"], listB: [">", "<=", "=="], listC: ["+", "-", "*"], A: "+", B: "==", C: "*" },
        { id: 8, src: "images/fillinBlankQ/F8.jpg", dif: 2, listA: [">=", "==", "<="], listB: ["21 + n", "21 - n", "21 * n"], listC: ["+", "-", "*"], A: "<=", B: "21 - n", C: "*" },
        { id: 9, src: "images/fillinBlankQ/F9.jpg", dif: 3, listA: ["||", "==", "&&"], listB: ["<", ">", "="], listC: ["<", ">", "="], A: "&&", B: "<", C: ">" },
		{ id: 10, src: "images/fillinBlankQ/F10.jpg", dif: 3, listA: ["&&", "||", "=="], listB: ["&&", "||", "=="], listC: ["&&", "||", "=="], A: "||", B: "||", C: "&&" },
		{ id: 11, src: "images/fillinBlankQ/F11.jpg", dif: 3, listA: ["class", "void", "synchronized"], listB: ["start()", "stop()", "run()"], listC: ["start()", "stop()", "run()"], A: "synchronized", B: "start()", C: "start()" },
		{ id: 12, src: "images/fillinBlankQ/F12.jpg", dif: 3, listA: ["void", "class", "synchronized"], listB: ["inherits", "extends", "protected"], listC: ["void", "null", "0"], A: "synchronized", B: "extends", C: "null" },
		{ id: 13, src: "images/fillinBlankQ/F13.jpg", dif: 4, listA: ["1", "2", "3"], listB: ["<", ">", "="], listC: ["long", "width", "length"], A: "1", B: "<", C: "length" },
		{ id: 14, src: "images/fillinBlankQ/F14.jpg", dif: 4, listA: ["1", "2", "3"], listB: ["1", "2", "3"], listC: ["(i)", "{i}", "[i]"], A: "1", B: "2", C: "(i)" },
		{ id: 15, src: "images/fillinBlankQ/F15.jpg", dif: 4, listA: ["1", "2", "3"], listB: ["1", "2", "3"], listC: ["1", "2", "3"], A: "3", B: "2", C: "1" },
		{ id: 16, src: "images/fillinBlankQ/F16.jpg", dif: 4, listA: ["string", "static", "new"], listB: ["string", "static", "new"], listC: ["s1==s2", "s1.equals(s2)", "s1!=s2"], A: "new", B: "new", C: "s1.equals(s2)" },
		{ id: 17, src: "images/fillinBlankQ/F17.jpg", dif: 5, listA: ["static", "void", "class"], listB: ["!=", "==", "<="], listC: ["!=", "==", "<="], A: "static", B: "==", C: "==" },
		{ id: 18, src: "images/fillinBlankQ/F18.jpg", dif: 5, listA: ["static", "void", "class"], listB: [">=", "<=", "=="], listC: [">=", "<=", "=="], A: "static", B: "<=", C: "==" },
		{ id: 19, src: "images/fillinBlankQ/F19.jpg", dif: 5, listA: ["<=", ">=", "=="], listB: ["n + 1", "n - 1", "n * 1"], listC: ["n", "true", "result"], A: "==", B: "n - 1", C: "result" },
		{ id: 20, src: "images/fillinBlankQ/F20.jpg", dif: 5, listA: ["class", "void", "extends"], listB: ["class", "void", "extends"], listC: ["class", "void", "extends"], A: "class", B: "extends", C: "void" },
		{ id: 21, src: "images/fillinBlankQ/F21.jpg", dif: 6, listA: ["demo", "d", "add"], listB: ["a", "b", "x"], listC: ["a", "b", "y"], A: "d", B: "x", C: "y" },
		{ id: 22, src: "images/fillinBlankQ/F22.jpg", dif: 6, listA: ["extends", "void", "class"], listB: ["protected", "static", "null"], listC: ["writeln", "println", "write"], A: "class", B: "static", C: "println" },
		{ id: 23, src: "images/fillinBlankQ/F23.jpg", dif: 6, listA: ["static", "void", "class"], listB: ["static", "void", "class"], listC: ["static", "void", "class"], A: "class", B: "static", C: "static" },
		{ id: 24, src: "images/fillinBlankQ/F24.jpg", dif: 6, listA: ["<", ">", "="], listB: ["<=", ">=", "=="], listC: ["+=", "-=", "*="], A: "<", B: "<=", C: "*=" },
		{ id: 25, src: "images/fillinBlankQ/F25.jpg", dif: 7, listA: ["+", "-", "="], listB: ["+", "-", "="], listC: ["+", "-", "="], A: "+", B: "=", C: "=" },
		{ id: 26, src: "images/fillinBlankQ/F26.jpg", dif: 7, listA: ["[i]", "width", "length"], listB: ["[i]", "width", "length"], listC: ["[i]", "width", "length"], A: "length", B: "length", C: "[i]" },
		{ id: 27, src: "images/fillinBlankQ/F27.jpg", dif: 7, listA: ["x1,y1", "x2,y2", "x2,y1"], listB: ["draw", "drawableRect", "drawRect"], listC: ["y1 + y2", "y2 - y1", "y1 - y2"], A: "x2,y2", B: "drawRect", C: "y2 - y1" },
		{ id: 28, src: "images/fillinBlankQ/F28.jpg", dif: 7, listA: ["&&", "==", "%"], listB: ["&&", "==", "%"], listC: ["&&", "==", "%"], A: "%", B: "%", C: "%" },
		{ id: 29, src: "images/fillinBlankQ/F29.jpg", dif: 8, listA: ["==", "%", "/"], listB: ["==", "%", "/"], listC: ["==", "%", "/"], A: "==", B: "/", C: "%" },
		{ id: 30, src: "images/fillinBlankQ/F30.jpg", dif: 8, listA: ["static", "void", "class"], listB: ["<", ">", "="], listC: ["a", "i", "0"], A: "static", B: "<", C: "i" },
		{ id: 31, src: "images/fillinBlankQ/F31.jpg", dif: 8, listA: ["0", "1", "2"], listB: ["<", ">", "="], listC: ["+", "-", "*"], A: "0", B: "<", C: "*" },
        { id: 32, src: "images/fillinBlankQ/F32.jpg", dif: 8, listA: ["static", "void", "class"], listB: ["int", "new", "public"], listC: ["a", "b", "p"], A: "static", B: "new", C: "p" },
        { id: 33, src: "images/fillinBlankQ/F33.jpg", dif: 9, listA: ["static", "void", "class"], listB: ["4", "5", "6"], listC: ["int", "count - 1", "count"], A: "static", B: "5", C: "count" },
        { id: 34, src: "images/fillinBlankQ/F34.jpg", dif: 9, listA: ["date", "int", "double"], listB: ["gets", "implements", "throws"], listC: ["Thread", "waitFor", "Exception"], A: "int", B: "throws", C: "Thread" },
        { id: 35, src: "images/fillinBlankQ/F35.jpg", dif: 9, listA: ["static", "void", "class"], listB: ["int", "Threading", "new"], listC: ["Thread", "run", "LIMIT"], A: "static", B: "new", C: "Thread" },
        { id: 36, src: "images/fillinBlankQ/F36.jpg", dif: 9, listA: ["true", "false", "null"], listB: ["true", "false", "null"], listC: ["true", "false", "null"], A: "false", B: "false", C: "true" },
        { id: 37, src: "images/fillinBlankQ/F37.jpg", dif: 10, listA: ["long", "length", "row"], listB: ["4", "5", "6"], listC: ["i", "myArray[5]", "myArray[i]"], A: "length", B: "5", C: "myArray[i]" },
        { id: 38, src: "images/fillinBlankQ/F38.jpg", dif: 10, listA: ["ne", "ie", "ioe"], listB: ["ne", "ie", "ioe"], listC: ["Math", "Mathematics", "Random"], A: "ne", B: "ioe", C: "Math" },
        { id: 39, src: "images/fillinBlankQ/F39.jpg", dif: 10, listA: ["static", "void", "class"], listB: ["static", "void", "class"], listC: ["writeln", "println", "write"], A: "class", B: "static", C: "println" },
		{ id: 40, src: "images/fillinBlankQ/F40.jpg", dif: 10, listA: ["static", "void", "class"], listB: ["99", "100", "101"], listC: ["<=", ">=", "=="], A: "static", B: "101", C: "<=" },
		{ id: 41, src: "images/fillinBlankQ/F41.jpg", dif: 11, listA: ["static", "void", "class"], listB: ["15", "17", "19"], listC: ["writeln", "println", "write"], A: "class", B: "17", C: "println" },
        { id: 42, src: "images/fillinBlankQ/F42.jpg", dif: 11, listA: ["private", "void", "new"], listB: ["nextLine()", "next()", "nextRow()"], listC: ["writeln", "println", "write"], A: "new", B: "nextLine()", C: "println" },
        { id: 43, src: "images/fillinBlankQ/F43.jpg", dif: 11, listA: ["i", "width", "length"], listB: ["0", "1", "2"], listC: ["i", "width", "length"], A: "length", B: "0", C: "length" },
        { id: 44, src: "images/fillinBlankQ/F44.jpg", dif: 11, listA: ["i", "width", "length"], listB: ["row", "col", "length"], listC: ["ROWS", "COLUMNS", "LENGTH"], A: "length", B: "row", C: "COLUMNS" },
        { id: 45, src: "images/fillinBlankQ/F45.jpg", dif: 12, listA: ["i + 1", "i - 1", "i * 1"], listB: ["||", "&&", "=="], listC: [">", "<", "="], A: "i - 1", B: "&&", C: ">" },
        { id: 46, src: "images/fillinBlankQ/F46.jpg", dif: 12, listA: ["static", "void", "class"], listB: ["[i]", "width", "length"], listC: ["a", "i", "list"], A: "static", B: "length", C: "i" },
        { id: 47, src: "images/fillinBlankQ/F47.jpg", dif: 12, listA: ["||", "&&", "=="], listB: ["char", "charAt", "charIn"], listC: ["0", "1", "2"], A: "&&", B: "charAt", C: "0" },
        { id: 48, src: "images/fillinBlankQ/F48.jpg", dif: 12, listA: ["sqrt", "srt", "abs"], listB: ["0", "1", "2"], listC: ["0", "1", "2"], A: "abs", B: "2", C: "0" },
        { id: 49, src: "images/fillinBlankQ/F49.jpg", dif: 13, listA: ["<", ">", "="], listB: ["i", "list", "indexOfMin"], listC: ["i", "list", "indexOfMin"], A: "<", B: "i", C: "indexOfMin" },
		{ id: 50, src: "images/fillinBlankQ/F50.jpg", dif: 13, listA: ["list", "i", "newSize"], listB: ["max", "min", "equals"], listC: ["list", "i", "newSize"], A: "newSize", B: "min", C: "i" },
		{ id: 51, src: "images/fillinBlankQ/F51.jpg", dif: 13, listA: ["Print", "Println", "PrintStream"], listB: ["Ran", "Rand", "Random"], listC: ["next", "nextInt", "nextDouble"], A: "PrintStream", B: "Random", C: "nextInt" },
        { id: 52, src: "images/fillinBlankQ/F52.jpg", dif: 13, listA: ["==", "!=", "&&"], listB: ["i", "null", "list"], listC: ["x", "null", "total"], A: "!=", B: "list", C: "total" },
        { id: 53, src: "images/fillinBlankQ/F53.jpg", dif: 14, listA: ["i", "iSize", "iSize - 1"], listB: ["i", "iSize", "iSize - 1"], listC: ["i", "iSize", "iSize - 1"], A: "iSize - 1", B: "i", C: "iSize - 1" },
        { id: 54, src: "images/fillinBlankQ/F54.jpg", dif: 14, listA: ["<=", "==", ">="], listB: ["i", "iSize", "i - 1"], listC: ["i", "iSize", "i - 1"], A: "<=", B: "i", C: "i - 1" },
        { id: 55, src: "images/fillinBlankQ/F55.jpg", dif: 14, listA: ["i - 1", "i", "i + 1"], listB: ["i - 1", "i", "i + 1"], listC: ["iSize = 0", "iSize++", "iSize--"], A: "i", B: "i + 1", C: "iSize--" },
        { id: 56, src: "images/fillinBlankQ/F56.jpg", dif: 14, listA: ["i", "initialCap", "int initialCap"], listB: ["&&", "||", "=="], listC: ["value--", "pos++", "pos--"], A: "initialCap", B: "&&", C: "pos++" },
        { id: 57, src: "images/fillinBlankQ/F57.jpg", dif: 15, listA: ["pos", "i - 1", "i"], listB: ["pos", "i - 1", "i"], listC: ["pos", "i - 1", "i"], A: "i", B: "i - 1", C: "pos" },
        { id: 58, src: "images/fillinBlankQ/F58.jpg", dif: 15, listA: ["stopTime + startTime", "stopTime - startTime", "stopTime * startTime"], listB: ["time()", "stop()", "start()"], listC: ["stopTime + startTime", "stopTime - startTime", "stopTime * startTime"], A: "stopTime - startTime", B: "time()", C: "stopTime - startTime" },
        { id: 59, src: "images/fillinBlankQ/F59.jpg", dif: 15, listA: ["==", "!=", "<="], listB: ["i + 1", "i++", "i--"], listC: ["i", "data", "good"], A: "!=", B: "i++", C: "good" },
		{ id: 60, src: "images/fillinBlankQ/F60.jpg", dif: 15, listA: ["col", "row", "square"], listB: ["row", "numRows", "null"], listC: ["row", "square", "numRows"], A: "row", B: "numRows", C: "square" },
		{ id: 61, src: "images/fillinBlankQ/F61.jpg", dif: 16, listA: ["||", "&&", "=="], listB: ["||", "&&", "=="], listC: ["col", "row", "0"], A: "&&", B: "&&", C: "row" },
        { id: 62, src: "images/fillinBlankQ/F62.jpg", dif: 16, listA: ["list", "found", "index"], listB: ["==", ">=", "<="], listC: ["list", "found", "index"], A: "index", B: "==", C: "found" },
        { id: 63, src: "images/fillinBlankQ/F63.jpg", dif: 16, listA: ["sc", "f", "0"], listB: ["next()", "nextword()", "hasNext()"], listC: ["sc", "f", "word"], A: "f", B: "next()", C: "word" },
        { id: 64, src: "images/fillinBlankQ/F64.jpg", dif: 16, listA: ["JFile", "Chooser", "JFileChooser"], listB: ["showDialog", "OpenDialog", "showOpenDialog"], listC: ["SelectedFile", "getSelectedFile", "getFile"], A: "JFileChooser", B: "showOpenDialog", C: "getSelectedFile" },
        { id: 65, src: "images/fillinBlankQ/F65.jpg", dif: 17, listA: ["static", "void", "class"], listB: ["writeln", "println", "write"], listC: ["writeln", "println", "write"], A: "static", B: "println", C: "println" },
        { id: 66, src: "images/fillinBlankQ/F66.jpg", dif: 17, listA: ["4", "100", "400"], listB: ["4", "100", "400"], listC: ["4", "100", "400"], A: "4", B: "100", C: "400" },
        { id: 67, src: "images/fillinBlankQ/F67.jpg", dif: 17, listA: ["static", "void", "class"], listB: ["3", "4", "5"], listC: ["1", "Hello", "i"], A: "static", B: "4", C: "i" },
        { id: 68, src: "images/fillinBlankQ/F68.jpg", dif: 18, listA: ["2", "6", "12"], listB: ["a + b", "a - b", " a * b"], listC: ["a", "b", "sum"], A: "6", B: "a + b", C: "sum" },
        { id: 69, src: "images/fillinBlankQ/F69.jpg", dif: 18, listA: ["next()", "nextInt()", "nextDouble()"], listB: ["<", ">", "="], listC: ["/", "%", "*"], A: "nextInt()", B: ">", C: "%" },
		{ id: 70, src: "images/fillinBlankQ/F70.jpg", dif: 18, listA: ["next()", "nextInt()", "nextDouble()"], listB: ["i", "powerOfTwo", "N"], listC: ["i", "powerOfTwo", "N"], A: "nextInt()", B: "powerOfTwo", C: "i" },
		{ id: 71, src: "images/fillinBlankQ/F71.jpg", dif: 19, listA: ["next()", "nextInt()", "nextDouble()"], listB: ["1e-15", "1e-16", "1e-17"], listC: ["c", "t", "epsilon"], A: "nextDouble()", B: "1e-15", C: "t" },
        { id: 72, src: "images/fillinBlankQ/F72.jpg", dif: 19, listA: ["protected", "void", "new"], listB: ["max", "min", "abs"], listC: ["max", "min", "abs"], A: "new", B: "min", C: "max" },
        { id: 73, src: "images/fillinBlankQ/F73.jpg", dif: 19, listA: ["static", "void", "class"], listB: ["<=", ">=", "="], listC: ["1", "4", "10"], A: "static", B: "<=", C: "4" },
        { id: 74, src: "images/fillinBlankQ/F74.jpg", dif: 20, listA: ["static", "void", "class"], listB: ["protected", "void", "new"], listC: ["next()", "nextInt()", "nextDouble()"], A: "static", B: "new", C: "nextInt()" },
        { id: 75, src: "images/fillinBlankQ/F75.jpg", dif: 20, listA: ["int", "int[]", "double[]"], listB: ["protected", "void", "new"], listC: ["row", "width", "length"], A: "int[]", B: "new", C: "length" },
        { id: 76, src: "images/fillinBlankQ/F76.jpg", dif: 20, listA: ["static", "void", "class"], listB: ["prev + current", "prev + prevprev", "current + prevprev"], listC: ["current = prev", "prevprev = prev", "prevprev = current"], A: "static", B: "prev + prevprev", C: "prevprev = prev" },
        { id: 77, src: "images/fillinBlankQ/F77.jpg", dif: 20, listA: ["1", "2", "3"], listB: ["1024", "2048", "4096"], listC: ["abs", "sum", "log"], A: "2", B: "2048", C: "log" },
        { id: 78, src: "images/fillinBlankQ/F78.jpg", dif: 21, listA: ["next()", "nextInt()", "nextDouble()"], listB: ["==", "!=", "<="], listC: ["10 * N", "10 + N", "10 * M"], A: "nextInt()", B: "!=", C: "10 * M" },
        { id: 79, src: "images/fillinBlankQ/F79.jpg", dif: 21, listA: ["next()", "nextInt()", "nextDouble()"], listB: ["==", "!=", "<="], listC: ["s + N", "N - digit", "s + digit"], A: "nextInt()", B: "!=", C: "s + digit" },
		{ id: 80, src: "images/fillinBlankQ/F80.jpg", dif: 21, listA: ["static", "void", "class"], listB: ["1", "10", "100"], listC: ["+", "*", "/"], A: "static", B: "10", C: "*" }
    ];

    // Data for multiple choices questions
    var multiplechoice = [
        { id: 1, src: "images/MultipleChoice/M1.jpg", dif: 1, listAns: ['NullPointer', 'AccessingNonStaticVariable', 'CapitalizatonError'], ans: 'NullPointer' },
		{ id: 2, src: "images/MultipleChoice/M2.jpg", dif: 1, listAns: ['ComparingTwoObjects', 'NullPointer', 'ZeroIndexed'], ans: 'NullPointer' },
		{ id: 3, src: "images/MultipleChoice/M3.jpg", dif: 2, listAns: ['PassingValuePassingReference', 'CapitalizatonError', 'NullPointer'], ans: 'NullPointer' },
		{ id: 4, src: "images/MultipleChoice/M4.jpg", dif: 2, listAns: ['AccessingNonStaticVariable', 'CapitalizatonError', 'ComparisonAssignment'], ans: 'AccessingNonStaticVariable' },
		{ id: 5, src: "images/MultipleChoice/M5.jpg", dif: 3, listAns: ['ConcurrentAccessToShareVariables', 'AccessingNonStaticVariable', 'ZeroIndexed'], ans: 'AccessingNonStaticVariable' },
		{ id: 6, src: "images/MultipleChoice/M6.jpg", dif: 3, listAns: ['NullPointer', 'BlankExceptionHandler', 'AccessingNonStaticVariable'], ans: 'AccessingNonStaticVariable' },
		{ id: 7, src: "images/MultipleChoice/M7.jpg", dif: 4, listAns: ['CapitalizatonError', 'MistypingMethodNameOverriding', 'BlankExceptionHandler'], ans: 'CapitalizatonError' },
		{ id: 8, src: "images/MultipleChoice/M8.jpg", dif: 4, listAns: ['ComparingTwoObjects', 'CapitalizatonError', 'AccessingNonStaticVariable'], ans: 'CapitalizatonError' },
		{ id: 9, src: "images/MultipleChoice/M9.jpg", dif: 4, listAns: ['NullPointer', 'ZeroIndexed', 'CapitalizatonError'], ans: 'CapitalizatonError' },
		{ id: 10, src: "images/MultipleChoice/M10.jpg", dif: 5, listAns: ['ConcurrentAccessToShareVariables', 'CapitalizatonError', 'ComparisonAssignment'], ans: 'ConcurrentAccessToShareVariables' },
		{ id: 11, src: "images/MultipleChoice/M11.jpg", dif: 5, listAns: ['ZeroIndexed', 'ConcurrentAccessToShareVariables', 'BlankExceptionHandler'], ans: 'ConcurrentAccessToShareVariables' },
		{ id: 12, src: "images/MultipleChoice/M12.jpg", dif: 6, listAns: ['AccessingNonStaticVariable', 'ComparingTwoObjects', 'ZeroIndexed'], ans: 'ZeroIndexed' },
		{ id: 13, src: "images/MultipleChoice/M13.jpg", dif: 6, listAns: ['PassingValuePassingReference', 'ZeroIndexed', 'NullPointer'], ans: 'ZeroIndexed' },
		{ id: 14, src: "images/MultipleChoice/M14.jpg", dif: 6, listAns: ['ZeroIndexed', 'AccessingNonStaticVariable', 'PassingValuePassingReference'], ans: 'ZeroIndexed' },
		{ id: 15, src: "images/MultipleChoice/M15.jpg", dif: 7, listAns: ['ComparisonAssignment', 'ConcurrentAccessToShareVariables', 'ZeroIndexed'], ans: 'ZeroIndexed' },
		{ id: 16, src: "images/MultipleChoice/M16.jpg", dif: 7, listAns: ['BlankExceptionHandler', 'ConcurrentAccessToShareVariables', 'ZeroIndexed'], ans: 'BlankExceptionHandler' },
		{ id: 17, src: "images/MultipleChoice/M17.jpg", dif: 8, listAns: ['PassingValuePassingReference', 'BlankExceptionHandler', 'AccessingNonStaticVariable'], ans: 'BlankExceptionHandler' },
		{ id: 18, src: "images/MultipleChoice/M18.jpg", dif: 8, listAns: ['ConcurrentAccessToShareVariables', 'AccessingNonStaticVariable', 'BlankExceptionHandler'], ans: 'BlankExceptionHandler' },
		{ id: 19, src: "images/MultipleChoice/M19.jpg", dif: 9, listAns: ['BlankExceptionHandler', 'CapitalizatonError', 'MistypingMethodNameOverriding'], ans: 'BlankExceptionHandler' },
		{ id: 20, src: "images/MultipleChoice/M20.jpg", dif: 9, listAns: ['PassingValuePassingReference', 'MistypingMethodNameOverriding', 'AccessingNonStaticVariable'], ans: 'PassingValuePassingReference' },
		{ id: 21, src: "images/MultipleChoice/M21.jpg", dif: 10, listAns: ['NullPointer', 'PassingValuePassingReference', 'CapitalizatonError'], ans: 'PassingValuePassingReference' },
		{ id: 22, src: "images/MultipleChoice/M22.jpg", dif: 10, listAns: ['MistypingMethodNameOverriding', 'ComparingTwoObjects', 'PassingValuePassingReference'], ans: 'PassingValuePassingReference' },
		{ id: 23, src: "images/MultipleChoice/M23.jpg", dif: 10, listAns: ['ComparisonAssignment', 'ComparingTwoObjects', 'MistypingMethodNameOverriding'], ans: 'ComparingTwoObjects' },
		{ id: 24, src: "images/MultipleChoice/M24.jpg", dif: 11, listAns: ['ComparingTwoObjects', 'ConcurrentAccessToShareVariables', 'ZeroIndexed'], ans: 'ComparingTwoObjects' },
		{ id: 25, src: "images/MultipleChoice/M25.jpg", dif: 11, listAns: ['NullPointer', 'ComparingTwoObjects', 'ComparisonAssignment'], ans: 'ComparingTwoObjects' },
		{ id: 26, src: "images/MultipleChoice/M26.jpg", dif: 12, listAns: ['MistypingMethodNameOverriding', 'MistypingMethodNameOverriding', 'ComparingTwoObjects'], ans: 'ComparingTwoObjects' },
		{ id: 27, src: "images/MultipleChoice/M27.jpg", dif: 12, listAns: ['MistypingMethodNameOverriding', 'ConcurrentAccessToShareVariables', 'ComparisonAssignment'], ans: 'ComparisonAssignment' },
		{ id: 28, src: "images/MultipleChoice/M28.jpg", dif: 13, listAns: ['ComparisonAssignment', 'CapitalizatonError', 'MistypingMethodNameOverriding'], ans: 'ComparisonAssignment' },
		{ id: 29, src: "images/MultipleChoice/M29.jpg", dif: 13, listAns: ['MistypingMethodNameOverriding', 'ComparisonAssignment', 'MistypingMethodNameOverriding'], ans: 'ComparisonAssignment' },
		{ id: 30, src: "images/MultipleChoice/M30.jpg", dif: 14, listAns: ['ComparisonAssignment', 'AccessingNonStaticVariable', 'ZeroIndexed'], ans: 'ComparisonAssignment' },
		{ id: 31, src: "images/MultipleChoice/M31.jpg", dif: 14, listAns: ['MistypeingMethodNameOverriding', 'MistypingMethodNameOverriding', 'AccessingNonStaticVariable'], ans: 'MistypeingMethodNameOverriding' },
		{ id: 32, src: "images/MultipleChoice/M32.jpg", dif: 14, listAns: ['ConcurrentAccessToShareVariables', 'ZeroIndexed', 'ComparisonAssignment'], ans: 'ZeroIndexed' },
		{ id: 33, src: "images/MultipleChoice/M33.jpg", dif: 15, listAns: ['AccessingNonStaticVariable', 'ComparisonAssignment', 'ConcurrentAccessToShareVariables'], ans: 'ConcurrentAccessToShareVariables' },
		{ id: 34, src: "images/MultipleChoice/M34.jpg", dif: 15, listAns: ['ComparisonAssignment', 'NullPointer', 'MistypingMethodNameOverriding'], ans: 'NullPointer' },
		{ id: 35, src: "images/MultipleChoice/M35.jpg", dif: 15, listAns: ['NullPointer', 'ComparisonAssignment', 'AccessingNonStaticVariable'], ans: 'NullPointer' },
		{ id: 36, src: "images/MultipleChoice/M36.jpg", dif: 16, listAns: ['MistypingMethodNameOverriding', 'ComparisonAssignment', 'NullPointer'], ans: 'NullPointer' },
		{ id: 37, src: "images/MultipleChoice/M37.jpg", dif: 16, listAns: ['BlankExceptionHandler', 'ComparisonAssignment', 'ConcurrentAccessToShareVariables'], ans: 'BlankExceptionHandler' },
		{ id: 38, src: "images/MultipleChoice/M38.jpg", dif: 16, listAns: ['AccessingNonStaticVariable', 'ComparisonAssignment', 'ConcurrentAccessToShareVariables'], ans: 'AccessingNonStaticVariable' },
		{ id: 39, src: "images/MultipleChoice/M39.jpg", dif: 17, listAns: ['ConcurrentAccessToShareVariables', 'MistypingMethodNameOverriding', 'AccessingNonStaticVariable'], ans: 'AccessingNonStaticVariable' },
		{ id: 40, src: "images/MultipleChoice/M40.jpg", dif: 17, listAns: ['AccessingNonStaticVariable', 'ComparisonAssignment', 'PassingValuePassingReference'], ans: 'AccessingNonStaticVariable' },
		{ id: 41, src: "images/MultipleChoice/M41.jpg", dif: 17, listAns: ['AccessingNonStaticVariable', 'CapitalizatonError', 'PassingValuePassingReference'], ans: 'CapitalizatonError' },
		{ id: 42, src: "images/MultipleChoice/M42.jpg", dif: 18, listAns: ['CapitalizatonError', 'MistypingMethodNameOverriding', 'ComparisonAssignment'], ans: 'CapitalizatonError' },
		{ id: 43, src: "images/MultipleChoice/M43.jpg", dif: 18, listAns: ['ComparingTwoObjects', 'ConcurrentAccessToShareVariables', 'CapitalizatonError'], ans: 'CapitalizatonError' },
		{ id: 44, src: "images/MultipleChoice/M44.jpg", dif: 19, listAns: ['ComparingTwoObjects', 'ConcurrentAccessToShareVariables', 'ComparisonAssignment'], ans: 'ConcurrentAccessToShareVariables' },
		{ id: 45, src: "images/MultipleChoice/M45.jpg", dif: 19, listAns: ['PassingValuePassingReference', 'MistypingMethodNameOverriding', 'ConcurrentAccessToShareVariables'], ans: 'ConcurrentAccessToShareVariables' },
		{ id: 46, src: "images/MultipleChoice/M46.jpg", dif: 20, listAns: ['ZeroIndexed', 'ComparingTwoObjects', 'PassingValuePassingReference'], ans: 'ZeroIndexed' },
		{ id: 47, src: "images/MultipleChoice/M47.jpg", dif: 20, listAns: ['AccessingNonStaticVariable', 'ZeroIndexed', 'MistypingMethodNameOverriding'], ans: 'ZeroIndexed' },
		{ id: 48, src: "images/MultipleChoice/M48.jpg", dif: 20, listAns: ['ZeroIndexed', 'PassingValuePassingReference', 'ComparingTwoObjects'], ans: 'ZeroIndexed' },
		{ id: 49, src: "images/MultipleChoice/M49.jpg", dif: 21, listAns: ['MistypeingMethodNameOverriding', 'ConcurrentAccessToShareVariables', 'ComparingTwoObjects'], ans: 'MistypeingMethodNameOverriding' },
		{ id: 50, src: "images/MultipleChoice/M50.jpg", dif: 21, listAns: ['MistypingMethodNameOverriding', 'ZeroIndexed', 'ComparingTwoObjects'], ans: 'ZeroIndexed' }
    ];

    var keyWords = [
        { id: 1, name: "void", src: "images/Dictionary/Nullpointer.png" },
        { id: 2, name: "main", src: "..."}];

    var bugsType = [
            { id: 1, name: "null pointer", src: "images/Dictionary/Nullpointer.png" },
            { id: 2, name: "comparision 2 object", src: ".."}];

    MistakeChasingGameClient.db = {
        findbugsdb:
            new DevExpress.data.ArrayStore({
                data: findbugs,
                key: 'id'
            }),
        fillingblankdb: new DevExpress.data.ArrayStore({
            data: fillingblank,
            key: 'id'
        }),
        multiplechoicedb: new DevExpress.data.ArrayStore({
            data: multiplechoice,
            key: 'id'
        }),

        keyWordsdb: new DevExpress.data.DataSource({
            store: keyWords,
            sort: 'id'
        }),

        bugsTypedb: new DevExpress.data.DataSource({
            store: bugsType,
            sort: 'id'
        })
    }
})();